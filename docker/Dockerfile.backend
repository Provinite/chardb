# Build stage
FROM node:22-alpine AS base

RUN apk update && apk add --no-cache openssl

FROM base AS builder

# Enable Corepack for Yarn 4
RUN corepack enable

WORKDIR /app

# Copy package files
COPY package.json yarn.lock .yarnrc.yml ./
COPY .yarn ./.yarn
COPY apps/backend/package.json ./apps/backend/
COPY packages/shared/package.json ./packages/shared/
COPY packages/database/package.json ./packages/database/

RUN yarn install

# Copy source code
COPY apps/backend ./apps/backend
COPY packages/shared ./packages/shared
COPY packages/database ./packages/database

# Generate Prisma client
RUN yarn workspace @chardb/backend db:generate

# Build all packages with dependency ordering
RUN yarn workspaces foreach --all --topological --verbose run build

# Production stage
FROM base AS production



# Enable Corepack for Yarn 4
RUN corepack enable

WORKDIR /app

# Install production dependencies only
COPY package.json yarn.lock .yarnrc.yml ./
COPY .yarn ./.yarn
COPY apps/backend/package.json ./apps/backend/
COPY packages/shared/package.json ./packages/shared/
COPY packages/database/package.json ./packages/database/

RUN yarn workspaces focus --production @chardb/backend

# Copy schema files needed for Prisma client generation
COPY --from=builder /app/packages/database/prisma ./packages/database/prisma
COPY --from=builder /app/apps/backend/prisma ./apps/backend/prisma

# Generate Prisma client in production stage
RUN yarn workspace @chardb/backend db:generate

# Copy built application
COPY --from=builder /app/apps/backend/dist ./apps/backend/dist
COPY --from=builder /app/packages/shared/dist ./packages/shared/dist
COPY --from=builder /app/packages/database/dist ./packages/database/dist

# Copy migration script
COPY scripts/migrate-and-start.sh ./scripts/migrate-and-start.sh
RUN chmod +x ./scripts/migrate-and-start.sh

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S backend -u 1001

# Change ownership
RUN chown -R backend:nodejs /app
USER backend

# Expose port
EXPOSE 4000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:4000/health || exit 1

# Start application with migrations
ENTRYPOINT ["./scripts/migrate-and-start.sh"]
CMD ["node", "apps/backend/dist/src/main.js"]