# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json

# OpenTelemetry Collector Service
#
# Centralized telemetry collection and processing service for observability.
# Acts as an intermediary between the application and monitoring backends:
# - Receives traces and metrics from the backend API
# - Processes and enriches telemetry data
# - Exports traces to Jaeger for visualization
# - Provides Prometheus metrics endpoint for monitoring
# - Batches and optimizes data transmission
# - Offers vendor-neutral telemetry collection
#
# Configured via otel-collector-config.yml to define pipelines.
# Essential for production observability and debugging capabilities.
# Reduces coupling between applications and monitoring systems.

version: '3.8'

services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.94.0
    container_name: chardb-otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ${OTEL_CONFIG_PATH:-./otel-collector-config.yml}:/etc/otel-collector-config.yml
    ports:
      - "${OTEL_GRPC_PORT:-4317}:4317"   # OTLP gRPC receiver
      - "${OTEL_HTTP_PORT:-4318}:4318"   # OTLP HTTP receiver
      - "${OTEL_METRICS_PORT:-8889}:8889"   # Prometheus metrics
    depends_on:
      jaeger:
        condition: service_healthy
    restart: unless-stopped